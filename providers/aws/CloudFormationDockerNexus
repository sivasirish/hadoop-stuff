{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample Template to install rexray on AWS.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "AWSAccessKey": {
      "Description": "Access Key string for use by rexray",
      "Type": "String",
      "ConstraintDescription": "Must be a valid AWS Access Key"
    },
    "AWSSecretKey": {
      "Description": "Secret Key string for use by rexray",
      "Type": "String",
      "ConstraintDescription": "Must be a valid AWS Secret Key"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "m1.large",
      "AllowedValues": [
        "t1.micro",
        "m1.small",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "c1.medium",
        "c1.xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "64"
      },
      "m1.small": {
        "Arch": "32"
      },
      "m1.large": {
        "Arch": "64"
      },
      "m1.xlarge": {
        "Arch": "64"
      },
      "m2.xlarge": {
        "Arch": "64"
      },
      "m2.2xlarge": {
        "Arch": "64"
      },
      "m2.4xlarge": {
        "Arch": "64"
      },
      "c1.medium": {
        "Arch": "32"
      },
      "c1.xlarge": {
        "Arch": "64"
      }
    },
    "AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "32": "ami-262e4c26",
        "64": "ami-2a2e4c2a"
      },
      "ap-southeast-1": {
        "32": "ami-a81003fa",
        "64": "ami-ae1003fc"
      },
      "ap-southeast-2": {
        "32": "ami-796c2643",
        "64": "ami-7f6c2645"
      },
      "eu-central-1": {
        "32": "ami-54272b49",
        "64": "ami-56272b4b"
      },
      "eu-west-1": {
        "32": "ami-6d360a1a",
        "64": "ami-57360a20"
      },
      "sa-east-1": {
        "32": "ami-ed48d9f0",
        "64": "ami-ef48d9f2"
      },
      "us-east-1": {
        "32": "ami-35025050",
        "64": "ami-3f02505a"
      },
      "us-west-1": {
        "32": "ami-098a494d",
        "64": "ami-0b8a494f"
      },
      "us-west-2": {
        "32": "ami-90e605a3",
        "64": "ami-96e605a5"
      }
    }
  },
  "Resources": {
    "RexrayInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "InstallAndRun": "Install"
          },
          "Install": {
            "packages": {
              "apt": {
                "wget": [],
                "curl": [],
                "heat-cfntools": []
              }
            },
            "files": {
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                      "action=/usr/local/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource RexrayInstance ",
                      "         --configsets InstallAndRun ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/rexray/config.yml": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "StorageDrivers:\n",
                      "  - ec2\n",
                      "AwsAccessKey: ",
                      {
                        "Ref": "AWSAccessKey"
                      },
                      "\n",
                      "AwsSecretKey: ",
                      {
                        "Ref": "AWSSecretKey"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000660",
                "owner": "root",
                "group": "root"
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "e0c66be2-8e5f-4db4-a85c-f528d4c00454"
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "RexraySecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "apt-get update\n",
                "apt-get -y install python-setuptools\n",
                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                "ln -s /usr/local/lib/python2.7/dist-packages/aws_cfn_bootstrap-1.4-py2.7.egg/init/ubuntu/cfn-hup /etc/init.d/cfn-hup\n",
                "chmod +x /etc/init.d/cfn-hup\n",
                "update-rc.d cfn-hup defaults\n ",
                "service cfn-hup start\n",
                "/usr/local/bin/cfn-init --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource RexrayInstance ",
                " --configsets InstallAndRun --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Install the latest Docker..\n",
                "/usr/bin/curl -o /tmp/install-docker.sh https://get.docker.com/\n",
                "chmod +x /tmp/install-docker.sh\n",
                "/tmp/install-docker.sh\n",
                "# add the ubuntu user to the docker group..\n",
                "/usr/sbin/usermod -G docker ubuntu\n",
                "# Install the latest Nexus OSS\n"
              ]
            ]
          }
        }
      }
    },
    "RexraySecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "68a6f9b8-6375-4d50-9879-d7ce5b9728eb"
        }
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "68a6f9b8-6375-4d50-9879-d7ce5b9728eb": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "e0c66be2-8e5f-4db4-a85c-f528d4c00454": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "68a6f9b8-6375-4d50-9879-d7ce5b9728eb"
        ]
      }
    }
  }
}
